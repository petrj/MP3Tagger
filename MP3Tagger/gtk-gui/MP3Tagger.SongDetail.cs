
// This file has been generated by the GUI designer. Do not modify.
namespace MP3Tagger
{
	public partial class SongDetail
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action goForwardAction;
		private global::Gtk.Action goBackAction;
		private global::Gtk.Action editAction;
		private global::Gtk.Action closeAction;
		private global::Gtk.Action saveAction;
		private global::Gtk.Action applyAction;
		private global::Gtk.Action cancelAction;
		private global::Gtk.Fixed @fixed;
		private global::Gtk.Toolbar toolbar;
		private global::Gtk.Notebook notebook;
		private global::Gtk.Fixed fixedTAG1;
		private global::MP3Tagger.TagWidget tagwidget1;
		private global::Gtk.Label labelTAG1;
		private global::Gtk.Fixed fixedTAG2;
		private global::Gtk.Label labelTAG2;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MP3Tagger.SongDetail
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.goForwardAction = new global::Gtk.Action ("goForwardAction", global::Mono.Unix.Catalog.GetString ("Next"), null, "gtk-go-forward");
			this.goForwardAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Next");
			w1.Add (this.goForwardAction, null);
			this.goBackAction = new global::Gtk.Action ("goBackAction", global::Mono.Unix.Catalog.GetString ("Previous"), null, "gtk-go-back");
			this.goBackAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Previous");
			w1.Add (this.goBackAction, null);
			this.editAction = new global::Gtk.Action ("editAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, "gtk-edit");
			this.editAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w1.Add (this.editAction, null);
			this.closeAction = new global::Gtk.Action ("closeAction", global::Mono.Unix.Catalog.GetString ("Close"), null, "gtk-close");
			this.closeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Close");
			w1.Add (this.closeAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
			w1.Add (this.saveAction, null);
			this.applyAction = new global::Gtk.Action ("applyAction", global::Mono.Unix.Catalog.GetString ("OK"), null, "gtk-apply");
			this.applyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("OK");
			w1.Add (this.applyAction, null);
			this.cancelAction = new global::Gtk.Action ("cancelAction", global::Mono.Unix.Catalog.GetString ("Cancel"), null, "gtk-cancel");
			this.cancelAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Cancel");
			w1.Add (this.cancelAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "MP3Tagger.SongDetail";
			this.Title = global::Mono.Unix.Catalog.GetString ("SongDetail");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child MP3Tagger.SongDetail.Gtk.Container+ContainerChild
			this.@fixed = new global::Gtk.Fixed ();
			this.@fixed.Name = "fixed";
			this.@fixed.HasWindow = false;
			// Container child fixed.Gtk.Fixed+FixedChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar'><toolitem name='applyAction' action='applyAction'/><separator/><toolitem name='goBackAction' action='goBackAction'/><toolitem name='goForwardAction' action='goForwardAction'/><separator/><toolitem name='cancelAction' action='cancelAction'/></toolbar></ui>");
			this.toolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar")));
			this.toolbar.Name = "toolbar";
			this.toolbar.ShowArrow = false;
			this.@fixed.Add (this.toolbar);
			global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.@fixed [this.toolbar]));
			w2.X = 3;
			w2.Y = 6;
			// Container child fixed.Gtk.Fixed+FixedChild
			this.notebook = new global::Gtk.Notebook ();
			this.notebook.WidthRequest = 380;
			this.notebook.HeightRequest = 400;
			this.notebook.CanFocus = true;
			this.notebook.Name = "notebook";
			this.notebook.CurrentPage = 0;
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.fixedTAG1 = new global::Gtk.Fixed ();
			this.fixedTAG1.Name = "fixedTAG1";
			this.fixedTAG1.HasWindow = false;
			// Container child fixedTAG1.Gtk.Fixed+FixedChild
			this.tagwidget1 = new global::MP3Tagger.TagWidget ();
			this.tagwidget1.Events = ((global::Gdk.EventMask)(256));
			this.tagwidget1.Name = "tagwidget1";
			this.fixedTAG1.Add (this.tagwidget1);
			global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.fixedTAG1 [this.tagwidget1]));
			w3.X = 6;
			w3.Y = 17;
			this.notebook.Add (this.fixedTAG1);
			// Notebook tab
			this.labelTAG1 = new global::Gtk.Label ();
			this.labelTAG1.Name = "labelTAG1";
			this.labelTAG1.LabelProp = global::Mono.Unix.Catalog.GetString ("TAG1");
			this.notebook.SetTabLabel (this.fixedTAG1, this.labelTAG1);
			this.labelTAG1.ShowAll ();
			// Container child notebook.Gtk.Notebook+NotebookChild
			this.fixedTAG2 = new global::Gtk.Fixed ();
			this.fixedTAG2.Name = "fixedTAG2";
			this.fixedTAG2.HasWindow = false;
			this.notebook.Add (this.fixedTAG2);
			global::Gtk.Notebook.NotebookChild w5 = ((global::Gtk.Notebook.NotebookChild)(this.notebook [this.fixedTAG2]));
			w5.Position = 1;
			// Notebook tab
			this.labelTAG2 = new global::Gtk.Label ();
			this.labelTAG2.Name = "labelTAG2";
			this.labelTAG2.LabelProp = global::Mono.Unix.Catalog.GetString ("TAG2");
			this.notebook.SetTabLabel (this.fixedTAG2, this.labelTAG2);
			this.labelTAG2.ShowAll ();
			this.@fixed.Add (this.notebook);
			global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.@fixed [this.notebook]));
			w6.X = 4;
			w6.Y = 63;
			this.Add (this.@fixed);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 390;
			this.DefaultHeight = 494;
			this.Show ();
			this.Shown += new global::System.EventHandler (this.OnShown);
			this.goForwardAction.Activated += new global::System.EventHandler (this.OnGoForwardActionActivated);
			this.goBackAction.Activated += new global::System.EventHandler (this.OnGoBackActionActivated);
			this.closeAction.Activated += new global::System.EventHandler (this.OnCloseActionActivated);
			this.applyAction.Activated += new global::System.EventHandler (this.OnApplyActionActivated);
			this.cancelAction.Activated += new global::System.EventHandler (this.OnCancelActionActivated);
		}
	}
}
